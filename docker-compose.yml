version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./cache:/app/cache
      - ./models:/app/models
    environment:
      - TRANSFORMERS_CACHE=/app/cache
      - CHROMA_PATH=/app/data/chroma
      - DB_PATH=/app/data/problems.db
      - LLM_MODEL_PATH=/app/models/llama-3-elyza-jp-8b-q4.gguf
    depends_on:
      - embedding-init
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  # Embedding initialization service
  embedding-init:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    volumes:
      - ./data:/app/data
      - ./cache:/app/cache
    environment:
      - TRANSFORMERS_CACHE=/app/cache
      - CHROMA_PATH=/app/data/chroma
      - DB_PATH=/app/data/problems.db
    command: >
      sh -c "
        echo 'Checking if embeddings need initialization...' &&
        python -c 'import sys; sys.path.append(\"/app\"); from app.scripts.init_embeddings import main; main()'
      "
    restart: "no"

volumes:
  # Persistent data
  app_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  
  # Model cache
  model_cache:
    driver: local
    driver_opts:
      type: none  
      o: bind
      device: ./cache

  # ML models
  models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./models

networks:
  default:
    name: g-kentei-network